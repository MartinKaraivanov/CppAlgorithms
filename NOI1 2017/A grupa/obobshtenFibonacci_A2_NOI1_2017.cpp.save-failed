#include<iostream>
using namespace std;

long long p;
long long koeChislo;

string koeChisloKatoString;

string parvoChislo;
string vtoroChislo;

long long desetichnoParvoPosledniDveCifri;
long long desetichnoVtoroPosledniDveCifri;

long long parvite66hilqdiPoslendiDveCifri[66010];

long long desetichnaCifra(char a){
    if(a == 'A'){
        return 10;
    }
    if(a == 'B'){
        return 11;
    }
    if(a == 'C'){
        return 12;
    }
    if(a == 'D'){
        return 13;
    }
    if(a == 'E'){
        return 14;
    }
    if(a == 'F'){
        return 15;
    }

    return a - '0';
}

long long poslednite2cifriNaChislo(string chislo){
    long long posledna = desetichnaCifra(chislo[chislo.size() - 1]) * 1;
    long long predposledna = 0;
    if(chislo.size() > 1){
        predposledna = desetichnaCifra(chislo[chislo.size() - 2]) * p;
    }

    return posledna + predposledna;
}

char ostatakVSistema(long long ostatak){
    if(ostatak == 10){
        return 'A';
    }
    if(ostatak == 11){
        return 'B';
    }
    if(ostatak == 12){
        return 'C';
    }
    if(ostatak == 13){
        return 'D';
    }
    if(ostatak == 14){
        return 'E';
    }
    if(ostatak == 15){
        return 'F';
    }

    return ostatak + '0';
}

char predposlednataCifra(long long chislo){
    chislo /= p;

    char ostatk = ostatakVSistema(chislo % p);

    return ostatk;
}

void praveneNaParvite66hilqdi(long long parvo, long long vtoro){
    parvite66hilqdiPoslendiDveCifri[0] = parvo;
    parvite66hilqdiPoslendiDveCifri[1] = vtoro;

    for(long long i = 2; i <= 66001; i++){
        parvite66hilqdiPoslendiDveCifri[i] =
            (parvite66hilqdiPoslendiDveCifri[i - 2] + parvite66hilqdiPoslendiDveCifri[i - 1])%(p*p);
    }
}

long long daljinaNaCikula(long long parvo, long long vtoro){
    long long segashno = vtoro;
    long long predishno = parvo;
    bool nachalotoLiE = true;

    long long daljina = 0;

    while((segashno != vtoro || predishno != parvo) || nachalotoLiE == true){
        daljina++;

        long long sledvashto = (segashno + predishno)%(p*p);
        //cout<<predishno<<" "<<segashno<<" "<<sledvashto<<endl;
        predishno = segashno;
        segashno = sledvashto;
        nachalotoLiE = false;
    }

    //cout<<segashno<<" "<<vtoro<<"  "<<predishno<<" "<<parvo<<endl;

    return daljina;
}

char koiEKtotoChislo(long long parvo, long long vtoro, long long k){
    long long segashno = vtoro;
    long long predishno = parvo;

    for(long long i = 0; i < k - 1; i++){
        long long sledvashto = (segashno + predishno)%(p*p);
        predishno = segashno;
        segashno = sledvashto;
    }

    char vtorataCifra = predposlednataCifra(predishno);

    return vtorataCifra;
}

char koqEPredposlednataCifraaKtotoChislo(){
    desetichnoParvoPosledniDveCifri = poslednite2cifriNaChislo(parvoChislo);
    desetichnoVtoroPosledniDveCifri = poslednite2cifriNaChislo(vtoroChislo);

    praveneNaParvite66hilqdi(desetichnoParvoPosledniDveCifri, desetichnoVtoroPosledniDveCifri);

    if(koeChislo <= p*p*p*p){
        char vtoraCifra = predposlednataCifra(parvite66hilqdiPoslendiDveCifri[koeChislo - 1]);
        return vtoraCifra;
    }

    long long parvoto = desetichnoParvoPosledniDveCifri;
    long long vtoroto = desetichnoVtoroPosledniDveCifri;

    long long daljina = daljinaNaCikula(parvoto, vtoroto);

    long long koetoTarsim = koeChislo % daljina;

    //cout<<daljina<<" "<<koetoTarsim<<endl;

    char vtorataCifra = koiEKtotoChislo(parvoto, vtoroto, koetoTarsim);

    return vtorataCifra;
}

int main(){
    cin>>p>>koeChisloKatoString;

    cin>>parvoChislo>>vtoroChislo;

    if(koeChisloKatoString.size() <= 18){
        for(unsigned long long i = 0; i < koeChisloKatoString.size(); i++){

        }
    }

    char vtorataCifra = koqEPredposlednataCifraaKtotoChislo();

    cout<<vtorataCifra;

    return 0;
}
